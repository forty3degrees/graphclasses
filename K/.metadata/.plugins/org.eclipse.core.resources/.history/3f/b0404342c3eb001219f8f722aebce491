package teo.isgci.core;

import java.util.HashMap;
import java.util.Map;

import teo.isgci.data.XmlDataProvider;
import teo.isgci.view.gui.ISGCIMainFrame;
import teo.isgci.yfiles.YFilesDrawingService;

public class App {
	public final static App Current = new App();
    
	public final IDataProvider DataProvider;
	public final Map<ISGCIMainFrame, IDrawingService> drawingServices;
    public final Map<ISGCIMainFrame, ViewManager> viewManagers;
	
	public App() {
		this.DataProvider = new XmlDataProvider();
		this.viewManagers = new HashMap<ISGCIMainFrame, ViewManager>();
		this.drawingServices = new HashMap<ISGCIMainFrame, IDrawingService>();
	}
	
	private void createServices(ISGCIMainFrame parent) {

		ViewManager viewManager = new ViewManager();
		IDrawingService drawingService = new YFilesDrawingService();
		viewManager.attachDrawingService(drawingService);

		this.viewManagers.put(parent, viewManager);
		this.drawingServices.put(parent, drawingService);
	}
	
	public IDrawingService getDrawingService(ISGCIMainFrame parent) {
		if (!this.drawingServices.containsKey(parent)) {
			createServices(parent);
		}
		return this.drawingServices.get(parent);
	}
	
	public ViewManager getViewManager(ISGCIMainFrame parent) {
		if (this.viewManagers.containsKey(parent)) {
			createServices(parent);
		}
		return this.viewManagers.get(parent);
	}
	
}
