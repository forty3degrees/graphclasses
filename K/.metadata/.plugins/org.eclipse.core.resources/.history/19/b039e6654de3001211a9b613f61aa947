package teo.data.services;

import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import teo.Loader;
import teo.isgci.gc.GraphClass;
import teo.isgci.grapht.Inclusion;
import teo.isgci.problem.Complexity;
import teo.isgci.problem.Problem;

/**
 * Class to provide data to the application. Uses an XML file
 * as the backing store for the data.
 * 
 * @author Calum McLellan
 *
 */
public class XmlDataProvider implements IDataService {

	private List<GraphClass> Graphs;
	private List<Problem> Problems;
	
	public XmlDataProvider()
	{
	}

	/**
	 * Loads the data from the specified file into memory.
	 * 
	 * @param	path	The path to the XML file containing the application data
	 */
	@Override
	public void loadData(String path) throws Exception {
		
		/* Initialize the collections */
		this.Graphs = new LinkedList<GraphClass>();
		this.Problems = new LinkedList<Problem>();
		
		Loader loader = new Loader("file:"+System.getProperty("user.dir")+"/",
                true);
        /*ISGCIReader gcr = new ISGCIReader(graph, problems);
        XMLParser xml = new XMLParser(loader.openInputSource(file),
                gcr, loader.new Resolver(), new NoteFilter());
        xml.parse();
        relations.addAll(gcr.getRelations());*/
	}

	@Override
	public Inclusion findRelation(GraphClass x, GraphClass y) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public GraphClass[] getGraphClasses() {
		
		/* Return a copy of the graphs in a new array. This avoids
		 * giving external access to the internal list.
		 */
		GraphClass[] graphs = new GraphClass[this.Graphs.size()];
		return this.Graphs.toArray(graphs);
	}

	@Override
	public Problem[] getProblems() {

		/* Return a copy of the problems in a new array. This avoids
		 * giving external access to the internal list.
		 */
		Problem[] problems = new Problem[this.Problems.size()];
		return this.Problems.toArray(problems);
	}

	@Override
	public void getSubClasses(GraphClass graph, Boolean recursive) {
		// TODO Auto-generated method stub

	}

	@Override
	public void getSuperClasses(GraphClass graph, Boolean recursive) {
		// TODO Auto-generated method stub

	}

	@Override
	public Map<Problem, Complexity> getComplexityMap(GraphClass graph) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Map<GraphClass, Complexity> getComplexityMap(Problem problem) {
		// TODO Auto-generated method stub
		return null;
	}

}

